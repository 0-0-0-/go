require 'bundler'
Bundler.setup()
require 'pry'
require 'faraday'
require 'json'
require 'fileutils'
require 'base64'

HORIZON = "https://horizon.stellar.org"
HTTP = Faraday.new(url: HORIZON) 

desc "download 20 valid transactions from the public stellar network to use as a fuzz corpus"
task :download_corpus do
  to_load = 20
  cursor = ""
  sizes = []

  while to_load > 0
    records = get_page cursor
    break if records.empty?
  
    records.each do |record|
      id = record["id"]
      env = record["envelope_xdr"]
      cursor = record["paging_token"]

      # rough removal of similar envelopes
      next if sizes.include?(env.size)
      sizes << env.size

      to_load -= 1

      path = "#{Dir.pwd}/corpus/#{id}"
      FileUtils.mkdir_p(File.dirname(path))

      unless File.exist?(path) 
        IO.write(path, Base64.decode64(env))
        puts "wrote #{id}: #{env.size}"
      else
        puts "skipped #{id}"
      end
    end
  end
end


task :fuzz do
  system("go-fuzz-build github.com/stellar/go/test/fuzz/txe")

end

def get_page(cursor)
  path = "/transactions?order=desc&limit=200&cursor=#{cursor}"
  resp = HTTP.get(path)
  unless resp.success?
    puts "failed to get #{path}"
  
    binding.pry
  end

  parsed = JSON.parse(resp.body)
  parsed["_embedded"]["records"]
end